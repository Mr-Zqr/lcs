name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5 PyInstaller
        pip install Pillow
    - name: Build application
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          python -m PyInstaller --onefile --windowed --add-data "icon.png;." --add-data "icon.ico;." --add-data "icon.icns;." --add-data "hidapitester-windows-x86_64.exe;." --add-data "hidapitester-linux-x86_64;." --add-data "hidapitester-linux-armv7l;." --add-data "hidapitester-macos-arm64;." --add-data "hidapitester-macos-x86_64;." --add-data "config.json;." --icon icon.ico --name logitech_channel_changer main.py
        else
          pyinstaller --onefile --windowed --add-data "icon.png:." --add-data "icon.ico:." --add-data "icon.icns:." --add-data "hidapitester-windows-x86_64.exe:." --add-data "hidapitester-linux-x86_64:." --add-data "hidapitester-linux-armv7l:." --add-data "hidapitester-macos-arm64:." --add-data "hidapitester-macos-x86_64:." --add-data "config.json:." --icon=icon.icns --name logitech_channel_changer main.py
        fi
      shell: bash

    - name: Create release artifacts
      run: |
        mkdir artifacts
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          cp -R dist/logitech_channel_changer.app artifacts/
        else
          cp dist/logitech_channel_changer* artifacts/
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: logitech_channel_changer-${{ matrix.os }}
        path: artifacts
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts/
    - name: Compress macOS artifact
      run: zip -r artifacts/logitech_channel_changer-macos-latest/logitech_channel_changer-macos.zip artifacts/logitech_channel_changer-macos-latest/logitech_channel_changer.app
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload macOS artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/logitech_channel_changer-macos-latest/logitech_channel_changer-macos.zip
        asset_name: logitech_channel_changer-macos.zip
        asset_content_type: application/zip

    - name: Upload Linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/logitech_channel_changer-ubuntu-latest/logitech_channel_changer
        asset_name: logitech_channel_changer-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/logitech_channel_changer-windows-latest/logitech_channel_changer.exe
        asset_name: logitech_channel_changer-windows.exe
        asset_content_type: application/octet-stream

